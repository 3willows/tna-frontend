@import "../variables/all";

@mixin columns-generator($count, $suffix: "") {
  @for $i from 1 through $count - 1 {
    $simplestFractionFound: false;

    @for $j from math.div($count, 2) through 1 {
      @if (
        $count % $j == 0 and $i % $j == 0 and $simplestFractionFound != true
      ) {
        .tna-column--width-#{math.div($i, $j)}-#{math.div($count, $j)}#{$suffix} {
          width: math.div(100%, $count) * $i;
          flex: none;
        }

        // .column--margin-right-#{math.div($i, $j)}-#{math.div($count, $j)}#{$suffix} {
        //   margin-right: math.div(100%, $count) * $i;
        // }

        // .column--margin-left-#{math.div($i, $j)}-#{math.div($count, $j)}#{$suffix} {
        //   margin-left: math.div(100%, $count) * $i;
        // }

        $simplestFractionFound: true;
      }
    }

    @if ($simplestFractionFound != true) {
      .tna-column--width-#{$i}-#{$count}#{$suffix} {
        width: math.div(100%, $count) * $i;
        flex: none;
      }

      //   .column--margin-right-#{$i}-#{$count}#{$suffix} {
      //     margin-right: math.div(100%, $count) * $i;
      //   }

      //   .column--margin-left-#{$i}-#{$count}#{$suffix} {
      //     margin-left: math.div(100%, $count) * $i;
      //   }
    }
  }
}

@mixin grid-medium {
  .tna-column--full-medium {
    width: 100%;
    flex: none;
  }

  @for $i from 1 through 3 {
    .tna-column--flex-#{$i}-medium {
      flex: $i 0;
    }
  }

  // @for $i from 1 through 3 {
  //   .column--order-#{$i}-medium {
  //     order: $i;
  //   }
  // }

  @include columns-generator($column-count-medium, "-medium");
}

@mixin grid-mobile {
  .tna-container {
    padding-right: math.div($gutter-width-mobile, 2) + 0.75rem;
    padding-left: math.div($gutter-width-mobile, 2) + 0.75rem;
  }

  .tna-column {
    padding-right: math.div($gutter-width-mobile, 2);
    padding-left: math.div($gutter-width-mobile, 2);
  }

  // .column--width-full-mobile {
  //   width: 100%;
  // }

  // @for $i from 1 through 3 {
  //   .column--flex-#{$i}-mobile {
  //     flex: $i 0;
  //   }
  // }

  //   @for $i from 1 through 3 {
  //     .column--order-#{$i}-mobile {
  //       order: $i;
  //     }
  //   }
}

@mixin grid-small {
  .tna-column--full-small {
    width: 100%;
    flex: none;
  }

  @for $i from 1 through 3 {
    .tna-column--flex-#{$i}-small {
      flex: $i 0;
    }
  }

  // @for $i from 1 through 3 {
  //   .column--order-#{$i}-small {
  //     order: $i;
  //   }
  // }

  @include columns-generator($column-count-small, "-small");
}

@mixin grid-tiny {
  .tna-column--full-tiny {
    width: 100%;
    flex: none;
  }

  @for $i from 1 through 3 {
    .tna-column--flex-#{$i}-tiny {
      width: auto;

      flex: $i 0;
    }
  }

  // @for $i from 1 through 3 {
  //   .column--order-#{$i}-tiny {
  //     order: $i;
  //   }
  // }

  @include columns-generator($column-count-tiny, "-tiny");
}
