@use "sass:map";
@use "../features";

$tna-black: #000;
$tna-yellow: #fc0;
$tna-pink: #fe1d57;
$tna-orange: #fd3f03;
$tna-green: #86bc25;
$tna-blue: #00b0ff;
$dark: #26262a;

$base-font: #343338;

$colour-palette-default: (
  "page-background": #fff,
  "base-font": $base-font,
  "dark-font": $tna-black,
  "light-font": rgba($base-font, 0.7),
  "focus-outline": #004c7e,
  "keyline": #ccc,
  "keyline-dark": $dark,
);

$colour-palette-dark: map.merge(
  $colour-palette-default,
  (
    "page-background": $dark,
    "base-font": rgba(#fff, 0.95),
    "dark-font": #fff,
    "light-font": rgba(#fff, 0.8),
    "focus-outline": $tna-yellow,
    "keyline": rgba(#fff, 0.5),
    "keyline-dark": #fff,
  )
);

$colour-palette-high-contrast: map.merge(
  $colour-palette-default,
  (
    "base-font": $tna-black,
    "light-font": $tna-black,
    "focus-outline": #f0a,
    "keyline": $tna-black,
    "keyline-dark": $tna-black,
  )
);

$colour-palette-high-contrast-dark: map.merge(
  $colour-palette-dark,
  (
    "page-background": $tna-black,
    "base-font": #fff,
    "light-font": #fff,
    "keyline": #fff,
  )
);

@mixin colour-css-vars() {
  @each $name, $value in $colour-palette-default {
    --#{$name}: #{$value};
  }
}

@mixin colour-css-vars-dark() {
  @each $name, $value in $colour-palette-dark {
    --#{$name}: #{$value};
  }
}

@mixin colour-css-vars-high-contrast() {
  @each $name, $value in $colour-palette-high-contrast {
    --#{$name}: #{$value};
  }
}

@mixin colour-css-vars-high-contrast-dark() {
  @each $name, $value in $colour-palette-high-contrast-dark {
    --#{$name}: #{$value};
  }
}

@mixin colour-font($colour) {
  color: map.get($colour-palette-default, $colour);
  color: var(--#{$colour});
}

@mixin colour-background($colour) {
  background-color: map.get($colour-palette-default, $colour);
  background-color: var(--#{$colour});
}

@mixin colour-border($colour) {
  border-color: map.get($colour-palette-default, $colour);
  border-color: var(--#{$colour});
}

@mixin colour-outline($colour) {
  outline-color: map.get($colour-palette-default, $colour);
  outline-color: var(--#{$colour});
}

@mixin invert {
  @include colour-css-vars-dark;

  @media (prefers-contrast: more) {
    @include colour-css-vars-high-contrast-dark;
  }

  @if features.$support-colour-schemes {
    @media (prefers-color-scheme: dark) {
      @include colour-css-vars;
    }

    @media (prefers-contrast: more) and (prefers-color-scheme: dark) {
      @include colour-css-vars-high-contrast;
    }
  }

  @include colour-font("base-font");
  @include colour-background("page-background");
}
